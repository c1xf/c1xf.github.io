<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Posts on 陈晓峰的技术博客</title><link>https://sssylvan.github.io/posts/</link><description>Recent content in Posts on 陈晓峰的技术博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sylvanchen@outlook.com (陈晓峰)</managingEditor><webMaster>sylvanchen@outlook.com (陈晓峰)</webMaster><copyright>©2023, All Rights Reserved</copyright><atom:link href="https://sssylvan.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Angular RxJS 响应式编程</title><link>https://sssylvan.github.io/posts/angular-rxjs-%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/angular-rxjs-%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B/</guid><description>使用 Angular 开发项目有一段时间了，这期间经历了我司复杂业务流程的毒打，好在逐渐掌握 RxJS 之后，开始应对自如 🤹。现在回过头看，必须得夸一句：响应式编程真</description><dc:creator>陈晓峰</dc:creator></item><item><title>Angular 依赖注入重写支付组件</title><link>https://sssylvan.github.io/posts/angular-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E9%87%8D%E5%86%99%E6%94%AF%E4%BB%98%E7%BB%84%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/angular-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E9%87%8D%E5%86%99%E6%94%AF%E4%BB%98%E7%BB%84%E4%BB%B6/</guid><description>最近重写了项目的支付中心组件。起因是项目经过几个月的开发和迭代，从开始的一种业务订单 + 一种支付方式，到现在变成了多种业务订单 + 多种支付方式 ，</description><dc:creator>陈晓峰</dc:creator></item><item><title>HTTP 缓存实践总结</title><link>https://sssylvan.github.io/posts/http-%E7%BC%93%E5%AD%98%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/http-%E7%BC%93%E5%AD%98%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</guid><description>HTTP 缓存是优化网络性能的一种方式，可以减少资源加载时间并降低流量消耗。它也是新手大概率会踩的一个坑，因为我就是这么过来的 😂。分析原因有 2 点： HTTP</description><dc:creator>陈晓峰</dc:creator></item><item><title>Hugo + Github Pages 搭建个人博客</title><link>https://sssylvan.github.io/posts/hugo-+-github-pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/hugo-+-github-pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid><description>Hugo 世界上最快的建站框架 现在工具很多，要搭建个人博客并非难事。也因为多，时间可能浪费在了选择上，本文主要记录搭建过程中我的一些选择，供读者的参</description><dc:creator>陈晓峰</dc:creator></item><item><title>React Hooks 没有闭包陷阱</title><link>https://sssylvan.github.io/posts/react-hooks-%E6%B2%A1%E6%9C%89%E9%97%AD%E5%8C%85%E9%99%B7%E9%98%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/react-hooks-%E6%B2%A1%E6%9C%89%E9%97%AD%E5%8C%85%E9%99%B7%E9%98%B1/</guid><description>初学 React Hooks 时，偶然在中文社区刷到一篇文章讲 “ React Hooks 的闭包陷阱” ，哇靠居然有坑，赶紧看 。看完自己也试了一下，运行结果确实反直觉。 接下来一段时间，频</description><dc:creator>陈晓峰</dc:creator></item><item><title>React Hooks 的心智模型</title><link>https://sssylvan.github.io/posts/react-hooks-%E7%9A%84%E5%BF%83%E6%99%BA%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/react-hooks-%E7%9A%84%E5%BF%83%E6%99%BA%E6%A8%A1%E5%9E%8B/</guid><description>用 React Hooks 写项目经常会出现困惑，我代码写得没问题啊，咋就不能正常运行呢 ？😅 这里的 “没问题” 指的是在 JavaScript 语法上没问题，但在 Hooks 领域下是有问题的。比如下</description><dc:creator>陈晓峰</dc:creator></item><item><title>Typescript 使用 infer 的4种场景</title><link>https://sssylvan.github.io/posts/typescript-%E4%BD%BF%E7%94%A8-infer-%E7%9A%844%E7%A7%8D%E5%9C%BA%E6%99%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/typescript-%E4%BD%BF%E7%94%A8-infer-%E7%9A%844%E7%A7%8D%E5%9C%BA%E6%99%AF/</guid><description>最近看到了两位大佬天花板级别的类型体操： 用 TypeScript 类型运算实现一个中国象棋程序 - 徐飞 TypeScript 类型体操天花板，用类型运算写一个 Lisp 解释器 - brambles 看完只能献上我的</description><dc:creator>陈晓峰</dc:creator></item><item><title>undefined 和 null 那些事</title><link>https://sssylvan.github.io/posts/undefined-%E5%92%8C-null-%E9%82%A3%E4%BA%9B%E4%BA%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/undefined-%E5%92%8C-null-%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid><description>在 Javascript 中，undefined 和 null 是若即若离的空值两兄弟 🧑‍🤝‍🧑（nullish value1）。我们有时候把它们视为两个不同的概念，有时候又把</description><dc:creator>陈晓峰</dc:creator></item><item><title>使用 React Hooks 开发时的心智模型</title><link>https://sssylvan.github.io/posts/%E4%BD%BF%E7%94%A8-react-hooks-%E5%BC%80%E5%8F%91%E6%97%B6%E7%9A%84%E5%BF%83%E6%99%BA%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/%E4%BD%BF%E7%94%A8-react-hooks-%E5%BC%80%E5%8F%91%E6%97%B6%E7%9A%84%E5%BF%83%E6%99%BA%E6%A8%A1%E5%9E%8B/</guid><description>从 Angular 转到用 React Hooks 写项目经常会出现困惑，我代码写得没问题啊，咋就不能正常运行呢 ？😅 这里的 “没问题” 指的是在 JavaScript 语法上没问题，但在 Hooks 领域下是有问题的</description><dc:creator>陈晓峰</dc:creator></item><item><title>初识 React Hooks 的一些思考</title><link>https://sssylvan.github.io/posts/%E5%88%9D%E8%AF%86-react-hooks-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sylvanchen@outlook.com (陈晓峰)</author><guid>https://sssylvan.github.io/posts/%E5%88%9D%E8%AF%86-react-hooks-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid><description>最近在朋友的安利下，认真学习了 React Hooks。之前简单了解过，当时的感受是，啥玩意？函数名加个 use 就能保持状态，取代生命周期啦。对于喜欢 kiss 的我来</description><dc:creator>陈晓峰</dc:creator></item></channel></rss>